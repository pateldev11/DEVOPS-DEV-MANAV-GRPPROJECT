trigger:
  branches:
    include:
      - main

variables:
  buildConfiguration: 'Release'

pool:
  vmImage: 'windows-latest'

stages:
  # -------------------------
  # Stage 1: Build and Test
  # -------------------------
  - stage: BuildAndTest
    displayName: 'Build and Test Stage'
    jobs:
      - job: Build
        displayName: 'Build MVC App'
        steps:
          - checkout: self
            displayName: 'Checkout source'

          - task: UseDotNet@2
            displayName: 'Install .NET 8 SDK'
            inputs:
              packageType: 'sdk'
              version: '8.0.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: DotNetCoreCLI@2
            displayName: 'Restore project'
            inputs:
              command: 'restore'
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build project'
            inputs:
              command: 'build'
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: 'Run tests'
            inputs:
              command: 'test'
              projects: '**/*Tests.csproj'
              arguments: '--configuration $(buildConfiguration) --collect:"Code Coverage"'
              publishTestResults: true

          - task: DotNetCoreCLI@2
            displayName: 'Publish project'
            inputs:
              command: 'publish'
              projects: '**/*.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'mvc-app-drop'
              publishLocation: 'Container'

  # -------------------------
  # Stage 2: Deploy to Dev
  # -------------------------
  - stage: DeployDev
    displayName: 'Deploy to Development'
    dependsOn: BuildAndTest
    condition: succeeded()
    jobs:
      - deployment: DeployToDev
        displayName: 'Deploy MVC App to Dev'
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: mvc-app-drop

                - task: CopyFiles@2
                  displayName: 'Copy files to dev environment'
                  inputs:
                    SourceFolder: '$(Pipeline.Workspace)/mvc-app-drop'
                    Contents: '**'
                    TargetFolder: '$(System.DefaultWorkingDirectory)/dev-deploy'

                # Mock deployment step
                - script: echo "ðŸš€ Deployed to Development Environment on port 5000"
                  displayName: 'Mock Dev Deployment'

  # -------------------------
  # Stage 3: Deploy to QA
  # -------------------------
  - stage: DeployQAT
    displayName: 'Deploy to QA'
    dependsOn: DeployDev
    condition: succeeded()
    jobs:
      - deployment: DeployToQAT
        displayName: 'Deploy MVC App to QA'
        environment: 'qa'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: mvc-app-drop

                - script: echo "ðŸš€ Deployed to QA Environment (Mock) on port 5001"
                  displayName: 'Mock QA Deployment'

  # -------------------------
  # Stage 4: Deploy to Staging
  # -------------------------
  - stage: DeployStaging
    displayName: 'Deploy to Staging'
    dependsOn: DeployQAT
    condition: succeeded()
    jobs:
      - deployment: DeployToStaging
        displayName: 'Deploy MVC App to Staging'
        environment: 'staging'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: mvc-app-drop

                - script: echo "ðŸš€ Deployed to Staging Environment (Mock) on port 5002"
                  displayName: 'Mock Staging Deployment'

  # -------------------------
  # Stage 5: Deploy to Production
  # -------------------------
  - stage: DeployProduction
    displayName: 'Deploy to Production'
    dependsOn: DeployStaging
    condition: succeeded()
    jobs:
      - deployment: DeployToProduction
        displayName: 'Deploy MVC App to Production'
        environment: 'production'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: mvc-app-drop

                - script: echo "ðŸš€ Deployed to Production Environment (Mock) on port 5003"
                  displayName: 'Mock Production Deployment'
